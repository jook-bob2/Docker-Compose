# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  springboot:
    container_name: springboot
    # Configuration for building the docker image for the backend service
    build:
      context: ./springboot # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://management-tutorial.ccgxmy3lrzke.us-east-2.rds.amazonaws.com:3306/management
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: test1234     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - react

  # Frontend Service 
  react:
    build:
      context: ./react # Use an image built from the specified dockerfile in the `polling-app-client` directory.
      dockerfile: Dockerfile
    volumes:
      - ./react:/usr/src/app
    ports:
      - "3000:3000" # Map the exposed port 80 on the container to port 9090 on the host machine
    restart: always
    depends_on:
      - springboot
    networks:
      - springboot  

  # Database Service (Mysql)
  db:
    build:
        context: springboot
    image: mysql:5.6
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: management
      MYSQL_USER: user
      MYSQL_PASSWORD: test1234
      MYSQL_ROOT_PASSWORD: test1234

 