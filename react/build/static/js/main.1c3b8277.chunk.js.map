{"version":3,"sources":["components/CustomerDelete.js","components/Customer.js","components/CustomerAdd.js","App.js","serviceWorker.js","index.js"],"names":["CustomerDelete","props","handleClickOpen","setState","open","handleClose","state","id","fetch","method","this","stateRefresh","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","deleteCustomer","React","Component","Customer","TableRow","TableCell","src","image","alt","width","name","birthday","gender","job","CustomerAdd","addCustomer","formData","FormData","append","file","userName","post","headers","fileName","handleFormSubmit","preventDefault","then","response","console","log","data","handleFileChange","target","files","value","handleValueChange","nextState","classes","className","hidden","accept","type","onChange","htmlFor","component","TextField","label","withStyles","theme","display","App","customers","completed","searchKeyword","callApi","res","catch","err","a","json","body","progress","timer","setInterval","root","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","title","noWrap","search","searchIcon","InputBase","placeholder","inputRoot","input","inputInput","inputProps","menu","Paper","paper","Table","table","TableHead","map","c","tableHead","TableBody","filter","indexOf","key","colSpan","align","CircularProgress","minWidth","marginLeft","marginRight","margin","spacing","flexGrow","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","padding","height","pointerEvents","alignItems","justifyContent","paddingLeft","transition","transitions","create","fontSize","marginTop","marginBottom","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1c3b8277.chunk.js","sourcesContent":["import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nclass CustomerDelete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n    \r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    deleteCustomer(id) {\r\n        const url = '/api/customers/'+id;\r\n        fetch(url, {\r\n            method: 'DELETE'\r\n        });\r\n        this.props.stateRefresh();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>삭제</Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle onClose={this.handleClose}>\r\n                        삭제 경고\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography gutterBottom>\r\n                            선택한 고객 정보가 삭제됩니다.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={(e) => {this.deleteCustomer(this.props.id)}}>삭제</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomerDelete;","import React from 'react';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport CustomerDelete from './CustomerDelete';\r\n\r\nclass Customer extends React.Component {\r\n    render () {\r\n        return (\r\n            <TableRow>\r\n                <TableCell>{this.props.id}</TableCell>\r\n                <TableCell><img src={this.props.image} alt=\"profile\" width={64}></img></TableCell>\r\n                <TableCell>{this.props.name}</TableCell>\r\n                <TableCell>{this.props.birthday}</TableCell>\r\n                <TableCell>{this.props.gender}</TableCell>\r\n                <TableCell>{this.props.job}</TableCell>\r\n                <TableCell><CustomerDelete stateRefresh={this.props.stateRefresh} id={this.props.id}></CustomerDelete></TableCell>\r\n            </TableRow>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Customer;","import React from 'react';\r\nimport {post} from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    hidden: {\r\n        display: 'none'\r\n    }\r\n});\r\n\r\nclass CustomerAdd extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        }\r\n    }\r\n\r\n    addCustomer = () => {\r\n        const url = '/api/customers';\r\n        const formData = new FormData();\r\n        formData.append('image', this.state.file);\r\n        formData.append('name', this.state.userName);\r\n        formData.append('birthday', this.state.birthday);\r\n        formData.append('gender', this.state.gender);\r\n        formData.append('job', this.state.job);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n        return post(url, formData, config);\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.addCustomer()\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                this.props.stateRefresh();\r\n            })\r\n        this.setState({\r\n            file: null,\r\n            userName: '',\r\n            birthday: '',\r\n            gender: '',\r\n            job: '',\r\n            fileName: '',\r\n            open: false\r\n        })\r\n    }\r\n\r\n    handleFileChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0],\r\n            fileName: e.target.value\r\n        })\r\n    }\r\n\r\n    handleValueChange = (e) => {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                    고객 추가하기\r\n                </Button>\r\n                <Dialog open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>고객 추가</DialogTitle>\r\n                    <DialogContent>\r\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange}></input><br/>\r\n                        <label htmlFor=\"raised-button-file\">\r\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\r\n                                {this.state.fileName === \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\r\n                            </Button>\r\n                        </label>\r\n                        <br/>\r\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange}></TextField><br/>\r\n                        <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange}></TextField><br/>\r\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange}></TextField><br/>\r\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange}></TextField><br/>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CustomerAdd);","import React, { Component } from 'react';\nimport Customer from './components/Customer'\nimport CustomerAdd from './components/CustomerAdd'\nimport './App.css';\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport { withStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    minWidth: 1080\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n\n  progress: {\n    margin: 'theme.spacing.unit * 2'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  }\n})\n\nclass App extends Component {\n  // state = {\n  //   customers: \"\",\n  //   completed: 0\n  // }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    }\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi()\n    .then(res => this.setState({customers: res}))\n    .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n    this.callApi()\n    .then(res => this.setState({customers: res}))\n    .catch(err => console.log(err));\n  }\n\n  callApi = async() => {\n    const response = await fetch('/api/customers');\n    const body = await response.json();\n    return body.data;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 });\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  render() {\n    const filteredComponents = (data) => {\n      data = data.filter((c) => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map((c) => {\n        return <Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job}/>\n      });\n    }\n    const { classes } = this.props;\n    const cellList = [\"번호\", \"프로필 이미지\", \"이름\", \"생년월일\", \"성별\", \"직업\", \"설정\"];\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              고객 관리 시스템\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"검색하기\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                name=\"searchKeyword\"\n                value={this.state.searchKeyword}\n                onChange={this.handleValueChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.menu}>\n          <CustomerAdd stateRefresh={this.stateRefresh}></CustomerAdd>\n        </div>\n        <Paper className={classes.paper}>\n          <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  {cellList.map((c) => {\n                    return <TableCell className={classes.tableHead}>{c}</TableCell>\n                  })}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.customers ? filteredComponents(this.state.customers) :\n                \n                /* this.state.customers.map(c => {\n                  return (<Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job}/>)\n                }) :  */\n                  <TableRow>\n                    <TableCell colSpan=\"6\" align=\"center\">\n                      <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed}></CircularProgress>\n                    </TableCell>\n                  </TableRow>\n                }\n              </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"Noto Sans KR\", serif'\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}><App /></MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}